
/**
 * Class names (like PHP) uses the prefix 'add_img_maps'
 */
 
/**
 * The Canvas will be positioned over the main image by the Javascript.
 * Thus CSS does half the job by giving it absolute position & no pad/border/margin.
 */
  
 canvas#addimgmaps-canvas.add_img_maps-canvas {
	position: absolute;
	max-width: 100%;
	z-index: 10;
	padding: 0px;
	border: 0px;
	margin: 0px;
	display: inherit;
}

/* Don't put line breaks within co-ordinate pairs */

span.addimgmaps-coord-pair {
	white-space: nowrap;
}

/*
 * The fieldsets that represent maps start off hidden.
 */

.add_img_maps-editmap  {
	display: none;
	white-space: normal;
}

/* Let them wrap*/
.add_img_maps-editmap a.button-secondary {
	padding-top: 0.1em;
	margin-top: 0.1em;
	margin-bottom: 0.2em;
	white-space: normal;
}

/*
 * A test when this didn't load.
 */

div#addimgmaps-test-213155 {
	border: red 2px !important;
	font-size: large;
	background-color: yellow;
	font: 'Garamond';
}

/*
 * The metadata area class structure is:
 * 
 * div.addimgmaps-area 
 * 	 > div.poly-coords
 */
 
div.addimgmaps-area {
	padding-top: 1em;
}

.addimgmaps-area input[type=text], input[type=url] {
	width: 100%;
}

.addimgmaps-area input[type=number] {
	width: 4.2em;
}

.addimgmaps-area label {
	font-size: large;
}

/* 
 * Adding Dashicons to Image edit buttons
 */

/*
 * Abandoned in favour of using HTML classes.
 *
 
#addimgmaps-cr:before {
	content: "\f180";
    /* Create new map */
/*}



.addimgmaps-addcoord {
}

.addimgmaps-delete-coords {
} 

.addimgmaps-rm { /*Remove map*

}

.addimgmaps-close { /* close current editing window * }

.addimgmaps-area-cr { /* create an area * }
*/